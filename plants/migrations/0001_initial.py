# Generated by Django 5.1.1 on 2025-03-30 01:53

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genus', models.CharField(max_length=50)),
                ('species', models.CharField(max_length=50)),
                ('slug', models.SlugField(max_length=120)),
                ('common_name', models.CharField(max_length=100)),
                ('family', models.CharField(max_length=30)),
                ('zones', models.JSONField(blank=True, default=list)),
                ('light', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator(regex='^[fds]{1,3}$')])),
                ('moisture', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator(regex='^[xmh]{1,3}$')])),
                ('form', models.CharField(choices=[('Herb', 'Herb'), ('Shrub', 'Shrub'), ('Tree', 'Tree'), ('Bamboo', 'Bamboo'), ('Vine', 'Vine')], max_length=10)),
                ('form_size', models.CharField(max_length=5)),
                ('min_h', models.FloatField()),
                ('max_h', models.FloatField()),
                ('min_w', models.FloatField()),
                ('max_w', models.FloatField()),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['genus', 'species'],
            },
        ),
        migrations.CreateModel(
            name='PlantTagCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('emoji', models.CharField(max_length=8)),
                ('color', models.CharField(default='#6c757d', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='PlantTag',
            fields=[
                ('tag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='taggit.tag')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tags', to='plants.planttagcategory')),
            ],
            options={
                'db_table': 'plants_planttag',
            },
            bases=('taggit.tag',),
        ),
        migrations.CreateModel(
            name='PlantTaggedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plants.plant')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='plants.planttag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='plant',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='plants.PlantTaggedItem', to='plants.PlantTag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('url', models.URLField(max_length=2000)),
                ('image', models.ImageField(blank=True, null=True, upload_to='plant_images/%Y/%m/%d/')),
                ('description', models.TextField(blank=True)),
                ('created', models.DateField(default=django.utils.timezone.now)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='plants.plant')),
            ],
            options={
                'ordering': ['-created'],
                'indexes': [models.Index(fields=['-created'], name='plants_imag_created_9ed123_idx')],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=500)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to='account.profile')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='plants.plant')),
            ],
            options={
                'ordering': ['created'],
                'indexes': [models.Index(fields=['created'], name='plants_comm_created_42baeb_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='plant',
            index=models.Index(fields=['genus', 'species'], name='latin_name_idx'),
        ),
    ]
